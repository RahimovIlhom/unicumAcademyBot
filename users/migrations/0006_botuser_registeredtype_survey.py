# Generated by Django 5.0 on 2024-10-11 20:40

import django.db.models.deletion
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_botuser_status_alter_botuser_preferred_time_slot'),
    ]

    operations = [
        migrations.AddField(
            model_name='botuser',
            name='registeredType',
            field=models.CharField(blank=True, choices=[('survey', 'Survey Participation'), ('registration', 'Course Registration')], max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('courseNumber', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('educationType', models.CharField(blank=True, choices=[('daytime', 'Daytime'), ('evening', 'Evening'), ('externally', 'Externally')], max_length=255, null=True)),
                ('educationDirection', models.CharField(blank=True, max_length=255, null=True)),
                ('englishLevel', models.CharField(choices=[('none', 'No knowledge'), ('little', 'A little knowledge'), ('average', 'Average knowledge'), ('good', 'Good (Intermediate and above)')], default='none', max_length=20)),
                ('englishGoal', models.CharField(blank=True, choices=[('career', 'Good career'), ('knowledge', 'Acquiring knowledge'), ('abroad', 'Work or study abroad'), ('entertainment', 'Understand movies/music'), ('certificate', 'Get certificate for university')], max_length=50, null=True)),
                ('daysPerWeek', models.PositiveIntegerField(blank=True, choices=[(1, '1 - 2 days per week'), (2, '3 days per week'), (3, 'all days per week')], null=True)),
                ('learningExperience', models.CharField(blank=True, choices=[('offline', 'In an offline learning center'), ('online', 'On online platforms'), ('self_taught', 'Self-taught'), ('no_experience', 'I have not had the opportunity to learn')], max_length=20, null=True)),
                ('obstacles', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('no_time', 'I didn’t have enough time'), ('no_qualified_teachers', 'There were no qualified teachers'), ('no_motivation', 'Lacked motivation'), ('too_expensive', 'It was too expensive'), ('center_too_far', 'The learning center was far away'), ('no_obstacles', 'No obstacles')], max_length=85, null=True)),
                ('startLearning_importance', models.CharField(blank=True, choices=[('start_now', 'I am ready to start now'), ('study_later', 'I can study later'), ('self_study', 'I want to study on my own'), ('not_needed', 'I don’t need English for now')], max_length=20, null=True)),
                ('importanceRanking', models.TextField(blank=True, help_text='Please rank the importance of the following factors (1-5) in order: 1. Quality teaching and qualified instructors, 2. Location, 3. Modern facilities and a friendly environment, 4. Activities (Movie day, Speaking club, Competitions), 5. Affordability. For example: 3, 2, 1, 5, 4', null=True)),
                ('englishProficiency', models.CharField(blank=True, choices=[('ielts', 'I want to obtain an IELTS certificate'), ('fluent', 'I want to speak English fluently'), ('academic', 'I want to read scientific publications and books in English'), ('career', 'It’s enough for my career')], help_text='Please select your English level. For example: I want to obtain an IELTS certificate', max_length=20, null=True)),
                ('courseType', models.CharField(choices=[('offline', 'In-person at an educational center'), ('online', 'Online')], default='offline', help_text='Choose the type of education that suits you.', max_length=10)),
                ('conditions', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('quality_teaching', 'If there is quality education and qualified teachers'), ('additional_tutor', 'If there is an additional tutor for extra activities'), ('free_materials', 'If Oxford system books and notebooks are provided for free'), ('close_location', 'If the location is nearby'), ('modern_conditions', 'If classes are held in modern conditions using the Oxford system'), ('friendly_environment', 'If I can learn with like-minded peers in a friendly environment'), ('regular_events', 'If regular events and competitions are organized in English'), ('english_only', 'If there is an environment where only English is spoken'), ('tours', 'If excursions to tourist places are organized'), ('study_abroad_support', 'If there is assistance in applying to study abroad'), ('affordable_prices', 'If the prices are reasonable')], max_length=175, null=True)),
                ('considerEnrollment', models.CharField(blank=True, choices=[('yes', 'I would consider enrolling'), ('no', "No, I'm not interested at the moment")], max_length=3, null=True)),
                ('freeLessonParticipation', models.CharField(blank=True, choices=[('yes', 'Yes, I will try attending the free open lesson'), ('no', "No, I don't need it at the moment")], help_text='Would you like to attend the free open lesson?', max_length=3, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='users.botuser')),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'ordering': ['-user__registeredAt'],
            },
        ),
    ]
